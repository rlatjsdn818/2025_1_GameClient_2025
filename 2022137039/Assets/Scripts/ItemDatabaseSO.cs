using System.Collections;
using System.Collections.Generic;
using JetBrains.Annotations;
using UnityEngine;

[CreateAssetMenu(fileName = "ItemDatabase", menuName = "Inventory/Database")]

public class ItemDatabaseSO : ScriptableObject
{
    public List <ItemSO> items = new List<ItemSO>();  //ItemSO를 리스트로 관리

    //캐싱을 위한 사전 찾기
    private Dictionary<int, ItemSO> itemsById;  //ID로 아이템 찾기 위한 캐싱
    private Dictionary<string, ItemSO> itemsByName;  //이건 이름으로 아이템 찾기

    public void Initialize()   //초기 설정 함수
    {
        itemsById = new Dictionary<int, ItemSO>();    //위에 선언만 했기 때문에 Dictionary 할당
        itemsByName = new Dictionary<string, ItemSO>();

        foreach (var item in items)   //items 리스트에 선언 되어 있는 것을 가지고 Dictionary에 입력.
        {
            itemsById[item.id] = item;
            itemsByName[item.itemName] = item;
        }
    }

    //ID로 아이템 찾기

    public ItemSO GetItemById(int id)
    {
        if(itemsById == null)  //itemsbyid가 캐싱이 되어있지 않다면 초기화 한다
        {
            Initialize();
        }

        if (itemsById.TryGetValue(id, out ItemSO item))  //id 값을 찾아서 itemSO를 리턴한다.
            return item;

        return null;  //없으면 NULL
    }
    //이름으로 아이템 찾기
    public ItemSO GetItemByName(string name)
    {
        if (itemsByName == null)
        {
            Initialize();
        }

        if (itemsByName.TryGetValue(name, out ItemSO item))
            return item;

        return null;
    }

    public List<ItemSO> GetItemByType(itemTypes type)
    {
        return items.FindAll(item => item.itemName == name);
    }
}
